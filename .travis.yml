# Copyright (c) 2017 Christoph Reiter
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

sudo: required
services: docker
language: generic
env:
  - DOCKER_FILE="Dockerfile.debian9.py2" PYTHON="python"
  - DOCKER_FILE="Dockerfile.debian9.py3" PYTHON="python3"
  - DOCKER_FILE="Dockerfile.ubuntu16.04.py2" PYTHON="python"
  - DOCKER_FILE="Dockerfile.ubuntu16.04.py3" PYTHON="python3"
  - DOCKER_FILE="Dockerfile.ubuntu16.10.py2" PYTHON="python"
  - DOCKER_FILE="Dockerfile.ubuntu16.10.py3" PYTHON="python3"

before_install:
  # Create a docker image called "myimage"
  - docker build -t myimage -f ".docker/$DOCKER_FILE" .

before_script:
  # create a docker container from the image, mount the current working
  # directory to /app inside the container and let the container running
  # in the background. The resulting container ID will be saved to
  # container_id so we can reference it later on.
  - docker run --volume "$(pwd):/app" --workdir "/app" --tty --detach myimage bash > container_id

script:
  # run our tests in the running contained
  - docker exec "$(cat container_id)" "$PYTHON" test_gstbasetransform.py

after_script:
  # stop the container
- docker stop "$(cat container_id)"
